import streamlit as st
import tensorflow as tf
from tensorflow.keras.models import load_model
from tensorflow.keras.layers import TextVectorization
import nltk
from nltk.corpus import stopwords
import numpy as np

# Download stopwords once
nltk.download('stopwords', quiet=True)
stop_words = set(stopwords.words('english'))

# Load the saved vocabulary from a numpy file
@st.cache_resource
def load_vectorizer(vocab_path='vocab.npy'):
    vocab = np.load(vocab_path, allow_pickle=True)
    vectorizer = TextVectorization(
        max_tokens=20000,
        output_mode='int',
        output_sequence_length=50
    )
    vectorizer.set_vocabulary(vocab)
    return vectorizer

vectorizer = load_vectorizer()
model = load_model("model_ai_detector .h5")

# ---------- UI Styling ----------
st.set_page_config(page_title="AI Text Detector", layout="centered", page_icon="🧠")

# Custom CSS for UI polish
st.markdown("""
    <style>
        /* Center content */
        .main {
            background-color: #ffffff;
            padding: 3rem 2rem 2rem 2rem;
            border-radius: 15px;
            max-width: 800px;
            margin: auto;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }
        h1 {
            text-align: center;
            background: -webkit-linear-gradient(45deg, #0072ff, #00c6ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-size: 2.5rem;
            margin-bottom: 2rem;
        }
        .stTextInput > div > input {
            padding: 0.75rem;
            font-size: 1rem;
        }
        .result {
            padding: 1rem;
            margin-top: 2rem;
            font-size: 20px;
            text-align: center;
            border-radius: 10px;
            font-weight: 600;
        }
        .ai {
            background-color: #ffe6e6;
            color: #d8000c;
            border: 2px solid #d8000c;
        }
        .human {
            background-color: #e6ffe6;
            color: #4f8a10;
            border: 2px solid #4f8a10;
        }
        .footer {
            margin-top: 50px;
            text-align: center;
            font-size: 14px;
            color: #888;
        }
        .footer a {
            color: #888;
            text-decoration: none;
        }
        .footer a:hover {
            text-decoration: underline;
        }
    </style>
""", unsafe_allow_html=True)

# ---------- App Layout ----------
with st.container():
    st.markdown("<div class='main'>", unsafe_allow_html=True)
    st.markdown("<h1>🧠 AI vs Human Text Detector</h1>", unsafe_allow_html=True)

    text_to_predict = st.text_input("✍️ Enter your text below:")

    if text_to_predict:
        # Remove stopwords
        filtered_text = ' '.join([word for word in text_to_predict.split() if word.lower() not in stop_words])

        # Vectorize input
        sequence = vectorizer([filtered_text])

        # Make prediction
        prediction = model.predict(sequence)

        # Show result
        if prediction[0][0] > 0.5:
            st.markdown("<div class='result ai'>🤖 Your text is likely generated by <strong>AI</strong>.</div>", unsafe_allow_html=True)
        else:
            st.markdown("<div class='result human'>👤 Your text is likely written by a <strong>Human</strong>.</div>", unsafe_allow_html=True)

    # Footer with credit
    st.markdown("""
        <div class='footer'>
            Developed by <strong>Ujjwal Sharma</strong><br>
            📧 <a href="mailto:sharmaujjwal247@gmail.com">sharmaujjwal247@gmail.com</a>
        </div>
    """, unsafe_allow_html=True)

    st.markdown("</div>", unsafe_allow_html=True)
